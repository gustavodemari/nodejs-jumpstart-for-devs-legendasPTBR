1
00:00:05,000 --> 00:00:06,000
Olá! Agora vamos construir noss

2
00:00:06,000 --> 00:00:10,000
App em 10 minutos. Na verdade, Node.js não é útil para tudo mas

3
00:00:10,000 --> 00:00:13,000
O que queremos fazer é manter o foco no que o Node.js é bom

4
00:00:13,000 --> 00:00:17,000
Então vamos criar uma aplicação web. Em primeiro lugar

5
00:00:17,000 --> 00:00:20,000
Precisamos obter as ferramentas de trabalho necessárias, então usaremos

6
00:00:20,000 --> 00:00:25,000
O node package manager para isto. O repositório NPM

7
00:00:25,000 --> 00:00:28,000
É uma coleção de softwares de terceiros disponível para todos

8
00:00:28,000 --> 00:00:29,000
Para uso

9
00:00:29,000 --> 00:00:33,000
Nós vamos fazer

10
00:00:33,000 --> 00:00:38,000
Uma pasta para a aplicação com o nome de "app-sprint". E o que vamos usar é, bem, existem diversos

11
00:00:38,000 --> 00:00:40,000
Frameworks por aí, eu vou escolher um deles

12
00:00:40,000 --> 00:00:43,000
Algo para começarmos. E eu vou para

13
00:00:43,000 --> 00:00:47,000
npm install express, em uma versão específica

14
00:00:47,000 --> 00:00:51,000
Simplesmente porque eu sei que esta versão funciona

15
00:00:51,000 --> 00:00:55,000
Existem maneiras melhores de gerenciar nossas aplicações, as quais iremos ver mais tarde

16
00:00:55,000 --> 00:01:00,000
Mas isto será em vão, porque seremos capazes de criar nós mesmos

17
00:01:00,000 --> 00:01:03,000
Um framework web sem ter que fazer tudo do zero

18
00:01:03,000 --> 00:01:07,000
Gostarão de notar que temos uma pasta de módulos no Node. Uma coisa que penso e Kim

19
00:01:07,000 --> 00:01:08,000
Estava realmente certo

20
00:01:08,000 --> 00:01:12,000
Foi ser contra existir um local centralizado para todos os pacotes

21
00:01:12,000 --> 00:01:13,000
Instalados

22
00:01:13,000 --> 00:01:17,000
Por padrão, os pacotes são instalados no diretório local

23
00:01:17,000 --> 00:01:20,000
O que significa que temos toda liberdade de usá-los, e eles não entram em conflito com

24
00:01:20,000 --> 00:01:21,000
Os pacotes de outras pessoas

25
00:01:21,000 --> 00:01:25,000
Vamos fazer uso do express

26
00:01:25,000 --> 00:01:28,000
Para criar nosso projeto de scaffolding

27
00:01:28,000 --> 00:01:34,000
Nada que eu possa falar... Lá vamos nós... Sim eu quero continuar no meu

28
00:01:34,000 --> 00:01:35,000
Diretório vazio

29
00:01:35,000 --> 00:01:39,000
Agora, aqui é onde podemos ver como o Node.js e o NPM funciona

30
00:01:39,000 --> 00:01:44,000
Eu tenho um pacote daquela pasta de json, que vamos utilizar mais tarde

31
00:01:44,000 --> 00:01:47,000
Isto permite que eu gerencie as dependencias do meu

32
00:01:47,000 --> 00:01:51,000
Programa, onde eu posso fazer um simples "npm install"

33
00:01:51,000 --> 00:01:54,000
Tudo que preciso é baixado

34
00:01:54,000 --> 00:01:58,000
E posso tomar um copo de café

35
00:01:58,000 --> 00:02:02,000
Pode sair, eu posso fingir que meu código está compilando

36
00:02:02,000 --> 00:02:05,000
Aqui vamos nós. Está feito, e agora temos o suficiente para fazer um

37
00:02:05,000 --> 00:02:10,000
Programa básico "Hello World", e se certificar que tudo está funcionando. A maioria dos programas no

38
00:02:10,000 --> 00:02:11,000
Node

39
00:02:11,000 --> 00:02:15,000
Na verdade são iniciados pela execução do interpretador do node, em um 

40
00:02:15,000 --> 00:02:18,000
Arquivo em particular. Faremos isso com a nossa aplicação

41
00:02:18,000 --> 00:02:24,000
Executamos o node no app daquele JS. Express é executado na porta 3000 por padrão

42
00:02:24,000 --> 00:02:30,000
E por último, vamos testar isso aqui. "Hello World! Express, welcome to express"

43
00:02:30,000 --> 00:02:37,000
Nós conseguimos